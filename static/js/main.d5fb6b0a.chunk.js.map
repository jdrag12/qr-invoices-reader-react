{"version":3,"sources":["assets/images/logo.svg","components/common/Navbar/index.js","components/common/Badge/index.js","components/invoices/InvoiceItem/index.js","components/invoices/InvoicesList/index.js","utils/messages/index.js","pages/Invoices/index.js","utils/mocks/qr_codes_links.js","components/common/Button/index.js","components/addinvoice/Questions/index.js","components/addinvoice/InvoiceDialog/index.js","components/addinvoice/ScanCode/index.js","utils/functions/index.js","pages/AddInvoice/index.js","App.js","index.js"],"names":["Navbar","children","src","logo","height","alt","Badge","className","InvoiceItem","invoice","sender","invoice_no","description","amount","refunded","refunded_amount","refunded_percentage","registration_date","toLocaleDateString","InvoicesList","invoices","length","data-testid","map","InvoicesPage","href","target","rel","to","Button","role","props","defaultProps","FirstQuestion","handleAnswers","answers","type","id","name","value","checked","firstAnswer","onChange","htmlFor","SecondQuestion","secondAnswer","min","max","step","Questions","InvoiceDialog","invoiceData","uploadedInvoice","addInvoiceToRegisterList","controls","history","useHistory","useState","setInvoice","setAnswers","prevStep","useEffect","Date","percentage","Number","Math","round","vat","e","onClick","push","disabled","ScanCode","nextStep","active","setActive","error","setError","setTimeout","handleInvoice","uploadInvoice","handleError","err","delay","onError","onScan","data","console","log","obj","JSON","parse","isObjectStringified","text","every","property","hasOwnProperty","SwitchScreen","AddInvoice","setStep","App","setInvoices","path","exact","Invoices","newInvoice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5fb6b0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.eb717ff9.svg\";","import PropTypes from \"prop-types\";\n\nimport logo from \"../../../assets/images/logo.svg\";\n\nimport \"./styles.css\";\n\nconst Navbar = ({ children }) => {\n  return (\n    <nav>\n      <span>\n        <img src={logo} height=\"55\" alt=\"logo of the page\" />\n      </span>\n      <div>{children}</div>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Navbar;\n","import PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst Badge = ({ children }) => {\n  return <div className=\"badge\">{children}</div>;\n};\n\nBadge.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Badge;\n","import PropTypes from \"prop-types\";\nimport Badge from \"../../../components/common/Badge\";\n\nimport \"./styles.css\";\n\nconst InvoiceItem = ({ invoice }) => {\n  const {\n    sender,\n    invoice_no,\n    description,\n    amount,\n    refunded,\n    refunded_amount,\n    refunded_percentage,\n    registration_date,\n  } = invoice;\n  return (\n    <div\n      className={`card__container ${refunded && \"card__container--secondary\"} `}\n    >\n      <div className=\"card__header\">\n        <h2>Invoice nº{invoice_no}</h2>\n        {refunded && <Badge>Refunded</Badge>}\n      </div>\n      <ul>\n        <li>\n          <strong>Registration date:</strong>{\" \"}\n          <span>{registration_date.toLocaleDateString(\"en-NL\")}</span>\n        </li>\n        <li>\n          <strong>Sender:</strong> <span>{sender}</span>\n        </li>\n        <li>\n          <strong>Description:</strong> <span>{description}</span>\n        </li>\n        <li>\n          <strong>Amount:</strong> <span>{amount}€</span>\n        </li>\n        {refunded && (\n          <>\n            <li>\n              <strong>Refunded amount:</strong> <span>{refunded_amount}€</span>\n            </li>\n            <li>\n              <strong>Refunded percentage:</strong>{\" \"}\n              <span>{refunded_percentage}%</span>\n            </li>\n          </>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nInvoiceItem.propTypes = {\n  invoice: PropTypes.object.isRequired,\n};\n\nexport default InvoiceItem;\n","import PropTypes from \"prop-types\";\nimport { NO_INVOICE_MESSAGE } from \"../../../utils/messages\";\n\nimport InvoiceItem from \"../InvoiceItem\";\n\nimport \"./styles.css\";\n\nconst InvoicesList = ({ invoices }) => {\n  const anyInvoice = invoices && invoices.length > 0;\n\n  return anyInvoice ? (\n    <div className=\"list__container\" data-testid=\"list-container\">\n      {invoices.map((invoice) => {\n        return <InvoiceItem key={invoice.invoice_no} invoice={invoice} />;\n      })}\n    </div>\n  ) : (\n    <div>{NO_INVOICE_MESSAGE}</div>\n  );\n};\n\nInvoicesList.propTypes = {\n  invoices: PropTypes.array,\n};\n\nexport default InvoicesList;\n","export const NO_INVOICE_MESSAGE = \"There is no invoice registered yet\";\nexport const FIRST_QUESTION_MESSAGE = \"Would you like to refund this invoice?\";\nexport const SECOND_QUESTION_MESSAGE =\n  \"What percentage of the invoice amount should be refunded?\";\nexport const SCAN_INSTRUCTIONS_MESSAGE = \"Please, scan a QR code of an invoice\";\nexport const INAVLID_QR_MESSAGE = \"You have to scan a QR code of an invoice\";\nexport const SWITCH_ON_MESSAGE = \"Switch camera ON\";\nexport const SWITCH_OFF_MESSAGE = \"Switch camera OFF\";\n","import PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {QR_CODE_EXAMPLE_1} from '../../utils/mocks/qr_codes_links';\n\nimport '../../App.css';\n\nimport Navbar from '../../components/common/Navbar';\nimport InvoicesList from '../../components/invoices/InvoicesList';\n\nconst InvoicesPage = ({invoices}) => {\n  return (\n    <>\n      <Navbar>\n        <a href={QR_CODE_EXAMPLE_1} target=\"blank\" rel=\"nofollow\">\n          QR Invoice example\n        </a>\n        <Link to=\"/add-invoice\">Add Invoice</Link>\n      </Navbar>\n      <section className=\"body__container\">\n        <h1>Registered Invoices</h1>\n        <InvoicesList invoices={invoices} />\n      </section>\n    </>\n  );\n};\n\nInvoicesPage.propTypes = {\n  invoices: PropTypes.array,\n};\n\nexport default InvoicesPage;\n","export const QR_CODE_EXAMPLE_1 =\n  'https://duckduckgo.com/?q=qr+code+%22%7B%22sender%22%3A+%22IKEA+BV%22%2C+%22invoice_no%22%3A+%222020000042%22%2C+%22description%22%3A+%22Kallax%22%2C+%22amount%22%3A+59.95%2C+%22vat%22%3A+%5B+%7B+%22rate%22%3A+21%2C+%22amount%22%3A+10.4+%7D+%5D+%7D%22&ia=answer';\n","import PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst Button = ({ role, children, ...props }) => {\n  return (\n    <button\n      {...props}\n      className={`button ${role === \"primary\" && \"button--primary\"} ${\n        role === \"secondary\" && \"button--secondary\"\n      } `}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  role: \"primary\",\n};\n\nButton.propTypes = {\n  role: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport {\n  FIRST_QUESTION_MESSAGE,\n  SECOND_QUESTION_MESSAGE,\n} from \"../../../utils/messages\";\n\nconst FirstQuestion = ({ handleAnswers, answers }) => {\n  return (\n    <>\n      <h3>{FIRST_QUESTION_MESSAGE}</h3>\n\n      <div>\n        <input\n          type=\"radio\"\n          id=\"firstAnswerYes\"\n          name=\"firstAnswer\"\n          value=\"yes\"\n          checked={answers.firstAnswer === \"yes\"}\n          onChange={handleAnswers}\n        />\n        <label htmlFor=\"firstAnswerYes\">Yes</label>\n\n        <input\n          type=\"radio\"\n          id=\"firstAnswerNo\"\n          name=\"firstAnswer\"\n          value=\"no\"\n          checked={answers.firstAnswer === \"no\"}\n          onChange={handleAnswers}\n        />\n        <label htmlFor=\"firstAnswerNo\">No</label>\n      </div>\n    </>\n  );\n};\n\nconst SecondQuestion = ({ answers, handleAnswers }) => {\n  return (\n    <>\n      <h3>{SECOND_QUESTION_MESSAGE}</h3>\n\n      <input\n        type=\"number\"\n        id=\"secondAnswer\"\n        name=\"secondAnswer\"\n        onChange={handleAnswers}\n        value={answers.secondAnswer}\n        min=\"1\"\n        max=\"100\"\n        step=\"1\"\n      />\n      <label htmlFor=\"secondAnswer\">%</label>\n    </>\n  );\n};\n\nconst Questions = ({ handleAnswers, answers }) => {\n  return (\n    <>\n      <FirstQuestion handleAnswers={handleAnswers} answers={answers} />\n      {answers.firstAnswer === \"yes\" && (\n        <SecondQuestion handleAnswers={handleAnswers} answers={answers} />\n      )}\n    </>\n  );\n};\n\nQuestions.propTypes = {\n  handleAnswers: PropTypes.func.isRequired,\n  answers: PropTypes.object.isRequired,\n};\n\nFirstQuestion.propTypes = {\n  handleAnswers: PropTypes.func.isRequired,\n  answers: PropTypes.object.isRequired,\n};\n\nSecondQuestion.propTypes = {\n  handleAnswers: PropTypes.func.isRequired,\n  answers: PropTypes.object.isRequired,\n};\n\nexport default Questions;\n","import PropTypes from \"prop-types\";\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"../../common/Button\";\n\nimport Questions from \"../Questions\";\n\nconst InvoiceDialog = ({\n  invoiceData: { invoice: uploadedInvoice, addInvoiceToRegisterList },\n  controls,\n}) => {\n  const history = useHistory();\n  const [invoice, setInvoice] = useState(uploadedInvoice);\n  const [answers, setAnswers] = useState({\n    firstAnswer: \"\",\n    secondAnswer: 1,\n  });\n\n  const { sender, invoice_no } = invoice;\n  const { prevStep } = controls;\n\n  useEffect(() => {\n    if (answers.firstAnswer === \"no\") {\n      setInvoice({\n        ...invoice,\n        refunded_percentage: null,\n        refunded_amount: null,\n        registration_date: new Date(),\n        refunded: false,\n      });\n    } else if (answers.firstAnswer === \"yes\") {\n      const percentage = answers.secondAnswer;\n\n      setInvoice({\n        ...invoice,\n        registration_date: new Date(),\n        refunded: true,\n        refunded_percentage: Number(percentage),\n        refunded_amount: Math.round(\n          (percentage / 100) * invoice.amount + invoice.vat[0].amount\n        ),\n      });\n    }\n  }, [answers]);\n\n  const registerInvoice = () => {\n    addInvoiceToRegisterList(invoice);\n    history.push(\"/\");\n  };\n\n  const handleAnswers = (e) => {\n    setAnswers({ ...answers, [e.target.name]: e.target.value });\n  };\n\n  return (\n    uploadedInvoice && (\n      <>\n        <div>\n          <span>\n            {\" \"}\n            Invoice no: <strong>{invoice_no}</strong>, from {sender} scanned\n          </span>\n\n          <Questions answers={answers} handleAnswers={handleAnswers} />\n          <div className=\"button__container\">\n            <Button role=\"secondary\" onClick={() => prevStep()}>\n              Scan again\n            </Button>\n            <Button\n              role=\"primary\"\n              onClick={() => registerInvoice()}\n              disabled={!answers.firstAnswer}\n            >\n              Submit Invoice\n            </Button>\n          </div>\n        </div>\n      </>\n    )\n  );\n};\n\nInvoiceDialog.propTypes = {\n  invoiceData: PropTypes.shape({\n    invoice: PropTypes.object.isRequired,\n    addInvoiceToRegisterList: PropTypes.func.isRequired,\n  }),\n  controls: PropTypes.shape({\n    prevStep: PropTypes.func,\n    nextStep: PropTypes.func,\n  }),\n};\n\nexport default InvoiceDialog;\n","import {useEffect, useState} from 'react';\nimport QrReader from 'react-qr-scanner';\nimport PropTypes from 'prop-types';\n\nimport {\n  checkInvoiceObject,\n  isObjectStringified,\n} from '../../../utils/functions';\nimport {\n  SCAN_INSTRUCTIONS_MESSAGE,\n  INAVLID_QR_MESSAGE,\n  SWITCH_OFF_MESSAGE,\n  SWITCH_ON_MESSAGE,\n} from '../../../utils/messages';\n\nimport Button from '../../common/Button';\n\nimport './styles.css';\n\nconst ScanCode = ({controls, invoiceData}) => {\n  const {nextStep} = controls;\n\n  const [active, setActive] = useState(true);\n  const [error, setError] = useState('');\n  const msErrorHidden = 3500;\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => setError(''), msErrorHidden);\n    }\n  }, [error]);\n\n  const handleScan = (data) => {\n    console.log(data);\n    if (data) {\n      const invoiceData = isObjectStringified(data.text);\n      const validInvoiceData = checkInvoiceObject(invoiceData);\n\n      if (!validInvoiceData) {\n        handleError(INAVLID_QR_MESSAGE);\n        return;\n      }\n\n      handleInvoice(invoiceData);\n    }\n  };\n\n  const handleInvoice = (invoice) => {\n    const {uploadInvoice} = invoiceData;\n    uploadInvoice(invoice);\n    nextStep();\n  };\n\n  const handleError = (err) => {\n    setError(err);\n    setActive(false);\n  };\n\n  const toggleCamera = () => {\n    setError('');\n    setActive(!active);\n  };\n\n  const showError = () => {\n    return <span className=\"error\">{error}</span>;\n  };\n\n  return (\n    <>\n      <h1>{SCAN_INSTRUCTIONS_MESSAGE}</h1>\n\n      <div className=\"video__container \">\n        {active && (\n          <div className=\"roll-in\">\n            <QrReader delay=\"false\" onError={handleError} onScan={handleScan} />\n          </div>\n        )}\n      </div>\n      <div className=\"button__container\">\n        <Button onClick={toggleCamera} role=\"primary\">\n          {active ? SWITCH_OFF_MESSAGE : SWITCH_ON_MESSAGE}\n        </Button>\n      </div>\n\n      {error && showError()}\n    </>\n  );\n};\n\nScanCode.propTypes = {\n  invoiceData: PropTypes.shape({\n    uploadInvoice: PropTypes.func.isRequired,\n  }),\n  controls: PropTypes.shape({\n    prevStep: PropTypes.func,\n    nextStep: PropTypes.func,\n  }),\n};\n\nexport default ScanCode;\n","export const checkInvoiceObject = (invoice) => {\n  if (typeof invoice !== \"object\") {\n    return false;\n  }\n\n  const invoiceProperties = [\n    \"sender\",\n    \"invoice_no\",\n    \"description\",\n    \"amount\",\n    \"vat\",\n  ];\n\n  return invoiceProperties.every((property) =>\n    invoice.hasOwnProperty(property)\n  );\n};\n\nexport const isObjectStringified = (obj) => {\n  try {\n    return JSON.parse(obj);\n  } catch (error) {\n    return false;\n  }\n};\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport InvoiceDialog from \"../../components/addinvoice/InvoiceDialog\";\nimport ScanCode from \"../../components/addinvoice/ScanCode\";\n\nimport \"./styles.css\";\n\nconst SwitchScreen = ({ step, controls, invoiceData }) => {\n  switch (step) {\n    case 1:\n      return <ScanCode controls={controls} invoiceData={invoiceData} />;\n    case 2:\n      return <InvoiceDialog controls={controls} invoiceData={invoiceData} />;\n    default:\n  }\n};\n\nconst AddInvoice = ({ addInvoiceToRegisterList }) => {\n  const [invoice, uploadInvoice] = useState(null);\n  const [step, setStep] = useState(1);\n\n  const prevStep = () => setStep(step - 1);\n  const nextStep = () => setStep(step + 1);\n\n  return (\n    <>\n      <header>\n        <Link to=\"/\">\n          <div className=\"arrow__container\">\n            <span>←</span>\n          </div>\n        </Link>\n      </header>\n      <section className=\"body__container body__container--tight\">\n        <SwitchScreen\n          step={step}\n          controls={{ prevStep, nextStep }}\n          invoiceData={{ invoice, uploadInvoice, addInvoiceToRegisterList }}\n        />\n      </section>\n    </>\n  );\n};\n\nSwitchScreen.propTypes = {\n  step: PropTypes.number,\n  invoiceData: PropTypes.shape({\n    invoice: PropTypes.object,\n    addInvoiceToRegisterList: PropTypes.func.isRequired,\n  }),\n  controls: PropTypes.shape({\n    prevStep: PropTypes.func,\n    nextStep: PropTypes.func,\n  }),\n};\n\nAddInvoice.propTypes = {\n  addInvoiceToRegisterList: PropTypes.func.isRequired,\n};\n\nexport default AddInvoice;\n","import {useState} from 'react';\n\nimport './App.css';\nimport Invoices from './pages/Invoices';\nimport AddInvoice from './pages/AddInvoice';\n\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n\nconst App = () => {\n  const [invoices, setInvoices] = useState([]);\n\n  const addInvoiceToRegisterList = (newInvoice) => {\n    setInvoices([...invoices, newInvoice]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Invoices invoices={invoices} />\n          </Route>\n          <Route path=\"/add-invoice\" exact>\n            <AddInvoice addInvoiceToRegisterList={addInvoiceToRegisterList} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}